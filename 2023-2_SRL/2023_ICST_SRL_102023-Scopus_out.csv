Authors,Author full names,Author(s) ID,Title,Year,Source title,Volume,Issue,Art. No.,Page start,Page end,Page count,Cited by,DOI,Link,Abstract,Author Keywords,Index Keywords,Document Type,Publication Stage,Open Access,Source,EID,Keywords,Pages
Häser F.; Felderer M.; Breu R.,"Häser, Florian (56310077200); Felderer, Michael (24832720900); Breu, Ruth (55885332900)",56310077200; 24832720900; 55885332900,"Software paradigms, assessment types and non-functional requirements in model-based integration testing: A systematic literature review",2014,ACM International Conference Proceeding Series,,,a29,,,,10,10.1145/2601248.2601257,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905489438&doi=10.1145%2f2601248.2601257&partnerID=40&md5=65606243f2c7ff6b56b102a2bc4360a2,"Context: In modern systems, like cyber-physical systems, where software and physical services are interacting, safety, security or performance play an important role. In order to guarantee the correct interoperability of such systems, with respect to functional and non-functional requirements, integration testing is an effective measure to achieve this. Model-based testing moreover not only enables early definition and validation, but also test automation. This makes it a good choice to overcome urgent challenges of integration testing. Objective: Many publications on model-based integration testing (MBIT) approaches can be found. Nevertheless, a study giving a systematic overview on the underlying software paradigms, measures for guiding the integration testing process as well as non-functional requirements they are suitable for, is missing. The aim of this paper is to find and synthesize the relevant primary studies to gain a comprehensive understanding of the current state of model-based integration testing. Method: For synthesizing the relevant studies, we conducted a systematic literature review (SLR) according to the guidelines of Kitchenham. Results: The systematic search and selection retrieved 83 relevant studies from which data has been extracted. Our review identified three assessment criteria for guiding the testing process, namely static metrics, dynamic metrics and stochastic &random. In addition it shows that just a small fraction considers non-functional requirements. Most approaches are for component-oriented systems. Conclusion: Results from the SLR show that there are two major research gaps. First, there is an accumulated need for approaches in the MBIT field that support non-functional requirements, as they are gaining importance. Second, means for steering the integration testing process, especially together with automation, need to evolve. Copyright 2014 ACM.",Assessment types; Model-based integration testing; Non-functional requirements; Systematic literature review,Embedded systems; Integration testing; Search engines; Software engineering; Stochastic systems; Assessment types; Cyber physical systems (CPSs); Model based testing; Model-based integrations; Non-functional requirements; Systematic literature review; Systematic literature review (SLR); Systematic searches; Interoperability,Conference paper,Final,,Scopus,2-s2.0-84905489438,,
Albahli A.; Andrews A.,"Albahli, Afnan (57796062700); Andrews, Anneliese (55667024000)",57796062700; 55667024000,Model-Based Testing of Smart Home Systems Using EFSM and CEFSM,2021,"Proceedings - 2021 International Conference on Computational Science and Computational Intelligence, CSCI 2021",,,,1824,1829,5.0,1,10.1109/CSCI54926.2021.00345,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85133898919&doi=10.1109%2fCSCI54926.2021.00345&partnerID=40&md5=f054a684986d21b30dba61909df7b959,The Internet of Things (IoT) is the future of communication. The number of devices connected to the Internet has been growing dramatically and is expected to continue to grow. This increase causes a huge challenge for software quality. New testing approaches need to be developed and investigated to assure quality and efficiency of such systems. The main challenge with IoT devices is that their functionality varies greatly depending on the device type and how it is connected. In order to maintain feasibility of these functionality systems need to be modeled. This paper proposes a testing approach for a smart home system (SHS) modeled by Extended Finite State Machines (EFSMs) and Communicating Extended Finite State Machines (CEFSMs). We generate tests for individual devices in the SHS as well as the interaction between devices.,Black box testing; Communicating Extended Finite State Machines(CEFSM); Extended Finite State Machines(EFSM); Internet of Things(IoT); Model-Based Testing(MBT); Smart Homes,Automation; Black-box testing; Computer software selection and evaluation; Intelligent buildings; Model checking; Software reliability; Communicating extended finite state machine; Extended finite state machine; Individual devices; Model based testing; Smart homes; Smart-home system; Software Quality; Internet of things,Conference paper,Final,,Scopus,2-s2.0-85133898919,"Black box testing, Communicating Extended Finite State Machines(CEFSM), Extended Finite State Machines(EFSM), Internet of Things(IoT), Model-Based Testing(MBT), Smart Homes",6.0
Galvis-Holguin S.; Sierra-Del Rio J.; Hincapié-Zuluaga D.,"Galvis-Holguin, Steven (57219312021); Sierra-Del Rio, Jorge (57219358882); Hincapié-Zuluaga, D. (57195674148)",57219312021; 57219358882; 57195674148,ENHANCEMENT EFFICIENCY OF MICHELL-BANKI TURBINE USING NACA 6512 MODIFIED BLADE PROFILE VIA CFD,2022,"EUREKA, Physics and Engineering",2022,2,,55,67,12.0,2,10.21303/2461-4262.2022.002351,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85128616829&doi=10.21303%2f2461-4262.2022.002351&partnerID=40&md5=00e745fc533e4a55400497b7f7301469,"The small hydroelectric power plants (SHPP) are implemented in non-interconnected zones (NIZ) of developing countries. In which, the provision of electrical energy from the national interconnected system is not economically feasible. Therefore, in the literature, hydroelectric generation technologies have been implemented taking advantage of the energy available in the rivers. One of these technologies is the Michell-Banki type cross-flow turbines (MBT), which, despite having lower efficiencies than turbines such as Pelton and Francis, maintain their efficiency although fluctuations in site conditions. For this reason, different studies have been made to increase the efficiency of the MBT by making geometric modifications to both the nozzle and the rotor. The purpose of this study is to determine numerically the effect of the geometry of the blades that form the runner on the efficiency of Michell-Banki Turbine (MBT). For this, two (2) geometries were studied corresponding to a circular sector of a standard tubular profile and an airfoil NACA 6512 modified in curvature profile and chord length, according to the profile of the standard tubular blade. For this study, transient simulations for multiphase water-air flow were implemented using a k–ε turbulence model in the Ansys 2020R1® CFX software. The two (2) turbine models were configured to the same hydraulic conditions of head and volumetric flow corresponding to 0.5 m and 16.27 L/s, respectively. Variations in rotational speed were configured between 100 and 200 RPM with 20 RPM steps. It was found that using the modified 6512 hydrodynamic profile, at 140 RPM increased efficiency by 6 %, compared to the conventional tubular type blade geometry.",computational fluids dynamics; cross-flow turbine; efficiency; micro hydropower,,Article,Final,All Open Access; Gold Open Access; Green Open Access,Scopus,2-s2.0-85128616829,"computational fluids dynamics, cross-flow turbine, efficiency, micro hydropower",13.0
Paiva A.C.R.; Flores N.H.; Faria J.P.; Marques J.M.G.,"Paiva, Ana C.R. (7102683763); Flores, Nuno H. (14051921200); Faria, João P. (35219959000); Marques, José M.G. (57203317333)",7102683763; 14051921200; 35219959000; 57203317333,End-to-end Automatic Business Process Validation,2018,Procedia Computer Science,130,,,999,1004,5.0,12,10.1016/j.procs.2018.04.104,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051251425&doi=10.1016%2fj.procs.2018.04.104&partnerID=40&md5=76f084499c964793bf3e4277884e0591,"Business Process Testing is the act of validating that end-to-end transactions through enterprise systems continue to work correctly as the underlying packaged applications evolve. End-to-end automatic business process validation can be a challenging task, but an important way to check that business rules continue to work properly and that problems are detected and corrected as soon as possible. This paper presents the design of a test automation platform, ETAP-Pro, to test end-to-end business processes that aims to overcome some challenges in validating business processes.",Business Process Testing; End-to-end Process Testing; Model Based Testing; Software Testing,Model checking; Business Process; Business rules; End to end; End-to-end process; Enterprise system; Model based testing; Test Automation; Software testing,Conference paper,Final,All Open Access; Gold Open Access,Scopus,2-s2.0-85051251425,"Business Process Testing, End-to-end Process Testing, Model Based Testing, Software Testing",6.0
Leal L.; Ceccarelli A.; Martins E.,"Leal, Lucas (57211116981); Ceccarelli, Andrea (18041935700); Martins, Eliane (7103315128)",57211116981; 18041935700; 7103315128,The SAMBA approach for self-adaptive model-based online testing of services orchestrations,2019,Proceedings - International Computer Software and Applications Conference,1,,8753930,495,500,5.0,4,10.1109/COMPSAC.2019.00076,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072691171&doi=10.1109%2fCOMPSAC.2019.00076&partnerID=40&md5=683624a37db42e4cc8371164eeda1a72,"Service Oriented Architecture (SOA) is a popular design pattern that allows building applications composed of loosely-coupled and autonomous services. Such services may evolve and change at runtime, often outside the control of the owner of the application. Consequently, typical validation approaches, like offline testing performed before services deployment, are necessary but not sufficient: offline testing cannot assure the correct behavior of the SOA during its execution. To cope with the evolution of services and their orchestrations, in this paper we present a Self-Adaptive Model-BAsed online testing framework called SAMBA. SAMBA aims to assess the proper behavior of a SOA during its lifecycle executing model-based online testing at runtime, under the coordination of a MAPE-K control loop. SAMBA is assessed in a case study, where its detection capability are proved through functional, mutation and fault injection tests.",Model-based testing; Online testing; Self-adaptive; Service Oriented Architecture,Application programs; Information services; Life cycle; Model checking; Building applications; Detection capability; Model based testing; Offline testing; On-line testing; Self-adaptive; Self-adaptive models; Validation approach; Service oriented architecture (SOA),Conference paper,Final,,Scopus,2-s2.0-85072691171,"Model-based testing, Online testing, Self-adaptive, Service Oriented Architecture",6.0
Rodrigues E.M.; Zorzo A.F.; Marchezan L.,"Rodrigues, Elder M. (36476479800); Zorzo, Avelino F. (55884766600); Marchezan, Luciano (57195371669)",36476479800; 55884766600; 57195371669,PLeTs: A software product line for testing tools,2023,UML-Based Software Product Line Engineering with SMarty,,,,315,334,19.0,0,10.1007/978-3-031-18556-4_14,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85160489594&doi=10.1007%2f978-3-031-18556-4_14&partnerID=40&md5=c46e4ba69b18dc6a10343251d8827b8e,"Software testing is a fundamental activity to improve software quality. However, software testing is one of the most time-consuming and expensive activities of the software development process. Therefore, several testing tools have already been developed to support software testing, including tools for model-based testing (MBT), which is a testing technique to automatically generate testing artifacts from the system model. Some of the advantages of MBT include lower cost and less effort to generate test cases. Therefore, in the last years, a diversity of commercial, academic, and open-source tools to support MBT has been developed to better explore these advantages. Although several testing tools to support MBT were produced in the past years, most of them have been individually and independently developed based on a single architecture. Therefore, it is difficult to integrate, evolve, maintain, and reuse them. One strategy that could minimize those problems would be to use software product lines (SPL), which allows to systematically generating software products at lower costs, in a shorter time, and with higher quality. Therefore, this chapter presents an SPL for testing tools that support MBT (PLeTs (This chapter is an expanded version of previously published paper Rodrigues et al. (PLeTs - Test Automation using Software Product Lines and Model-Based Testing. In: Proceedings of the 22th International Conference on Software Engineering and Knowledge Engineering, pp. 483-488, 2010.))) and how we applied the Stereotype-based Management of Variability (SMarty) approach to manage and resolve the dependencies among components and to represent the variability in PLeTs architecture. PLeTs is a component-based SPL developed to automatically generate MBT tools. The PLeTs MBT tools aim to automate any of the test activities of MBT, for example, the generation of test cases and/or test scripts based on the system model. Basically, PLeTs MBT tools receive, as input, a system model, generate the test cases/scripts, execute the test scripts, and then compare the produced results. Since PLeTs can generate tools that connect to any commercial testing tool, a software testing team can incorporate their own testing tools, hence reducing effort and investment. In a nutshell, the main PLeTs goal is to reuse SPL artifacts and use existing testing tools to ease the development of new MBT tools.",,,Book chapter,Final,,Scopus,2-s2.0-85160489594,N/A,20.0
Gao Z.,"Gao, Zhenhua (58209911400)",58209911400,Comparative study on model based test of automotive automatic control system,2023,"2023 IEEE 2nd International Conference on Electrical Engineering, Big Data and Algorithms, EEBDA 2023",,,,1628,1632,4.0,0,10.1109/EEBDA56825.2023.10090694,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85154546903&doi=10.1109%2fEEBDA56825.2023.10090694&partnerID=40&md5=2e78da9fe6dc042367b65a006ed64ab4,"In today's automotive industry, due to the increasingly complex nature of ECUs, there is a great need to create a model that can be tested early to maintain functional functioning. However, there are not many solutions that teach us how to organize and run these tests for maximum coverage. This article evaluates prototype CANoe+, which maximizes the coverage of test cases generated using the CANoe and GraphWalker tools from the perspective of software developers and software testers. CANoe+ was significantly more effective than CANOE alone when the Mann-Whitney Wilcoxon statistical test was used in the experiment. Such experimental results add to the existing evidence and demonstrate the irreplaceable advantages of using model-based testing techniques such as C..",CANoe; EUC; GraphWalker Tools; Maximum coverage,Automation; Model checking; Software testing; Automatic control systems; Automotives; CANoe; Comparatives studies; Complex nature; EUC; Graphwalker tool; Maximum coverage; Model-based test; Study on models; Automotive industry,Conference paper,Final,,Scopus,2-s2.0-85154546903,"CANoe, EUC, GraphWalker Tools, Maximum coverage",5.0
Shivapuji A.M.; Dasappa S.,"Shivapuji, Anand M. (55803865800); Dasappa, S. (6603068560)",55803865800; 6603068560,Quasi dimensional numerical investigation of syngas fuelled engine operation: MBT operation and parametric sensitivity analysis,2017,Applied Thermal Engineering,124,,,911,928,17.0,13,10.1016/j.applthermaleng.2017.06.086,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85021117310&doi=10.1016%2fj.applthermaleng.2017.06.086&partnerID=40&md5=a405cad69c2fbd6a868cc2a162806ba4,"The formulation, validation and application of a thermodynamic quasi dimensional SI engine simulation model for syngas fuelled operation is reported. The QD approach establishes the dependence of turbulent combustion on mixture thermo-physical properties and fluid domain average turbulent parameters, eliminating the need for domain discretization (unlike in multi-dimensional models). Turbulent combustion is formulated along the Eddy Entrainment Laminar Burn-up concept (Williams-Klimov criterion) with non-linear dependence of mixture burn rate on local laminar flame speed and turbulent intensity. Simulations are reported for syngas fuelled operation of a six cylinder engine and compared with experimental pressure and heat release traces. Maximum brake torque stoichiometric operation pressure and heat release simulation traces evolve closely with corresponding experimental traces. The simulation peak pressure and IMEP deviations remain within 5% and 2% of experimental traces respectively while the position of peak pressure overlaps within ±0.5 deg. Parametric sensitivity analysis for load, mixture quality and ignition timing are also addressed. Overall, the simulation results are in accordance within 5% of experimental results as long as the parametric variations are within the regimes of tuning of empirical correlations. In general, the versatility and robustness of quasi dimensional approach to simulate non-regular bio-derived alternative fuels is established.",Engine simulation; Non-regular fuel; Quasi-dimensional model; Syngas; Turbulent combustion; Williams-Klimov criterion,Alternative fuels; Combustion; Engine cylinders; Engines; Mixtures; Quality control; Synthesis gas; Engine simulation; Quasi-dimensional model; Syn-gas; Turbulent combustion; Williams; Sensitivity analysis,Article,Final,,Scopus,2-s2.0-85021117310,"Engine simulation, Non-regular fuel, Quasi-dimensional model, Syngas, Turbulent combustion, Williams-Klimov criterion",18.0
Tan C.,"Tan, Chao (57209500799)",57209500799,A model-based approach to generate dynamic synthetic test data,2019,"Proceedings - 2019 IEEE 12th International Conference on Software Testing, Verification and Validation, ICST 2019",,,8730199,495,497,2.0,4,10.1109/ICST.2019.00063,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85067963763&doi=10.1109%2fICST.2019.00063&partnerID=40&md5=7a95a9917072dac53522b8a7a4a43f8e,"Having access to high-quality test data is an important requirement to ensure effective cross-organizational integration testing in the Norwegian public sector. Evogent is a PhD project that aims to provide model-based solutions for generating synthetic test data that is statistically representative of real (reference) population, and is dynamic in the same way that the actual population is. This project is carried out in collaboration with the Modernization of the National Registry project (MF) within the Norwegian Tax Department, which serves as our case study. In this paper, we present a conceptual model and related algorithms for event generation.",Machine learning; Model-based testing; Test data generation,Learning systems; Machine learning; Model checking; Testing; Cross-organizational integration; High Quality Test; Industrial partners; Machine learning techniques; Model based approach; Model based testing; Systems under tests; Test data generation; Integration testing,Conference paper,Final,,Scopus,2-s2.0-85067963763,"Machine learning, Model-based testing, Synthetic data generation",4.0
Essebaa I.; Chantit S.,"Essebaa, Imane (57191406520); Chantit, Salima (57191413214)",57191406520; 57191413214,Scrum and V lifecycle combined with model-based testing and model driven architecture to deal with evolutionary system issues,2018,Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics),11163 LNCS,,,77,91,14.0,3,10.1007/978-3-030-00856-7_5,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85055775838&doi=10.1007%2f978-3-030-00856-7_5&partnerID=40&md5=066467c4f2ecfdae968ac812c45d9db5,"Model Driven Engineering (MDE) and Agile Methods (AM) are two principal domains that are in the way of improvement and evolution in order to facilitate the realisation of IT projects. However, these areas evolve separately despite the great number of researches that focus on improving realisation project’ techniques. Thus, our approach aims to provide an approach that combines two variants of MDE, Model Driven Architecture approach and Model-Based Testing with the V development lifecycle used in every scrum Agile Methodology sprint to deal with system evolution. In order to well illustrate this approach, we apply it on Rental Car Agency System realisation using Scrum methodology with some requirements’ evolution.",Evolutionary system; Model Driven Architecture; Model transformations; Model-Based Testing; Scrum agile methodology; Test generation; V incremental lifecycle,Agile manufacturing systems; Architecture; Life cycle; Model checking; Software architecture; Software design; Agile Methodologies; Evolutionary system; Model based testing; Model driven architectures; Model transformation; Test generations; Computer architecture,Conference paper,Final,,Scopus,2-s2.0-85055775838,"Evolutionary system, Model Driven Architecture, Model transformations, Model-Based Testing, Scrum agile methodology, Test generation, V incremental lifecycle",15.0
Gupta R.K.,"Gupta, Ravi Kumar (57194222989)",57194222989,Challenges in communicating about defence research: Insight into defence research and development organisation's media strategy,2017,Bridging the Communication Gap in Science and Technology: Lessons from India,,,,49,62,13.0,0,10.1007/978-981-10-1025-5_4,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85019301701&doi=10.1007%2f978-981-10-1025-5_4&partnerID=40&md5=6678132f4b683791f04ee5c05027ca80,"Communicating nuances of defence science and technology to common man is not easy; communicating these and the challenges associated with the development of defence technologies to media was indeed a delicate and uphill task. In spite of numerous achievements and accomplishments that had been realised in the face of numerous stonewalling challenges, Defence Research and Development Organisation (DRDO) had to pass through a difficult phase marked by adverse publicity drawing flak from all quarters for a considerable period of time, damaging its reputation and denying its rightful place in the minds of masses and stakeholders. Insufficient and ineffective communication mainly due to absence of a single window agency with authorisation to interact with media was identified as the major cause for a widening perception gap resulting in the rapidly worsening situation. How creation of the Directorate of Public Interface, as the single window for interacting with media as well as public in general, and implementation of other well-planned communication strategies aimed at bridging perception gaps, particularly with media, helped in transforming DRDO's image to evolve into a major contributor to the nation building and a potential driver for national economy, attracting the country's best talent, is discussed along with a brief background of DRDO's evolution.",Defence research; DRDO; Electronic warfare; Guided missiles; MBT arjun; Media intervention; Public interaction,,Book chapter,Final,,Scopus,2-s2.0-85019301701,"Defence research, DRDO, Electronic warfare, Guided missiles, MBT arjun, Media intervention, Public interaction",14.0
Khan M.U.; Iqbal M.Z.; Ali S.,"Khan, Muhammad Uzair (55602694800); Iqbal, Muhamamd Zohaib (57222997737); Ali, Shaukat (56962801700)",55602694800; 57222997737; 56962801700,A heuristic-based approach to refactor crosscutting behaviors in UML state machines,2014,"Proceedings - 30th International Conference on Software Maintenance and Evolution, ICSME 2014",,,6976138,557,560,3.0,7,10.1109/ICSME.2014.94,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84931080483&doi=10.1109%2fICSME.2014.94&partnerID=40&md5=06e928d1a35649d4410dd9bd46ffc950,"UML state machines are commonly used to model the state-based behavior of communication and control systems to support various activities such as test cases and code generation. Standard UML state machines are well suited to model functional behavior, however extra-functional behavior such as robustness and security can also be directly modeled on them, but this often results in cluttered models since extra-functional behaviors are often crosscutting. Such modeling crosscutting behavior directly on UML state machines is a common practice. Aspect-Oriented Modeling (AOM) allows systematically modeling of crosscutting behavior and has shown to provide a scalable solution in the recent years. However, due to lack of familiarity of AOM in both academic and industry, extra-functional behavior is often modeled directly on UML state machines and as a result those UML state machines are difficult to read and maintain. To improve the readability of already developed UML state machines and ease maintenance, we propose a set of heuristics, derived from two industrial cases studies, implemented in a tool to automatically identify commonly observed crosscutting behaviors in UML state machines and refactor them as Aspect State Machines. Such refactoring makes the state machines easier to maintain and comprehend. We present the results of applying our proposed heuristics to the existing UML state machines of two industrial case studies developed for model-based testing.",Aspect-Oriented Modeling; Heuristics; Model Refactoring; UML State machine,Aspect oriented modeling; Communication and control; Crosscutting behaviors; Functional behaviors; Heuristics; Industrial case study; Refactorings; UML state machine; Model checking,Conference paper,Final,,Scopus,2-s2.0-84931080483,"Aspect-Oriented Modeling, Heuristics, Model Refactoring, UML State machine",4.0
Zhao J.; Su M.; Zhao Q.; Liu J.; Wang J.; Wang J.; An X.,"Zhao, Jiayuan (57907020300); Su, Majing (57990193100); Zhao, Qian (57990225300); Liu, Jiajie (57990210000); Wang, Junbin (57990243200); Wang, Junjie (57215142777); An, Xiaoli (57197708076)",57907020300; 57990193100; 57990225300; 57990210000; 57990243200; 57215142777; 57197708076,3D Finite Element Study of the Physiological Anchorage Control Concept on Anchorage Molars in Lingual Orthodontics,2022,Journal of Healthcare Engineering,2022,,1421586,,,,0,10.1155/2022/1421586,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85143186062&doi=10.1155%2f2022%2f1421586&partnerID=40&md5=8a1c5cfa689b69d63eaa759daac824ae,"Objective. To study the effect of the physiological anchorage control concept on anchorage molars in lingual and labial orthodontic techniques. Methods. Three-dimensional finite element models, including the right maxillary first molar, periodontal ligament, alveolar bone, and buccal tube, were established. The models were divided into the McLaughlin-Bennett-Trevisi (MBT™) straight-wire model with 0-degree maxillary first molar axial inclination and the physiologic anchorage Speewire system (PASS) model with -7-degree maxillary first molar axial inclination. Simulated sliding retraction forces (1 N, 1.5 N, and 2 N) were loaded on the buccal side and lingual side, and retraction forces (0.5 N, 0.75 N, and 1 N) were loaded on the buccal and lingual sides simultaneously. The displacements, principal stresses, and von Mises stresses of the periodontal ligament under different conditions were derived. Results. The anchorage molars showed different degrees of rotation, tipping, intrusion, and extrusion. As the force increased, these displacement trends also increased. The mesial displacement of the buccal + lingual force loading was less than that of the other two groups. Under the same force load method, the mesial displacement of the PASS group was less than that of the MBT group. Tilt movement increases the tensile stress of the distal cervical margin and root mesial apical third and the compressive stress of the mesial cervical margin and root distal apical third. The maximum stress of the periodontal ligament was less than that of the other two groups when the lingual force was loaded. Conclusion. The physiological anchorage control concept in lingual orthodontics provides better sagittal anchorage control than in labial orthodontics, but there is no significant difference numerically. Attention should be given to the control of torsion, torque, and arch width. Tilt movement increases the PDL stress of the cervical margin and root apical third. The sliding retraction force should be loaded lingually to maintain the force value of 1∼1.5 N. © 2022 Jiayuan Zhao et al.",,Finite Element Analysis; Humans; Molar; Movement; Periodontal Ligament; Tongue; Anchorages (foundations); Finite element method; Physiology; Tensile strength; Tensile stress; 3-D finite elements; Alveolar bones; Condition; Control concept; Finite-element study; Periodontal ligament; Principal stress; System models; Three dimensional finite element model; VonMises stress; alveolar bone; Article; cone beam computed tomography; controlled study; degree of freedom; human; lingual orthodontics; lip; male; maxillary first molar; normal human; orthodontic anchorage; orthodontics; periodontal ligament; three dimensional finite element analysis; tongue; volunteer; work environment; finite element analysis; molar tooth; movement (physiology); tongue; Compressive stress,Article,Final,All Open Access; Gold Open Access; Green Open Access,Scopus,2-s2.0-85143186062,,
Leiden K.; Fernandes A.; Atkins S.,"Leiden, Kenneth (23095100800); Fernandes, Alicia (57199406806); Atkins, Stephen (7005926007)",23095100800; 57199406806; 7005926007,Managing aircraft by trajectory: Literature review and lessons learned,2018,"ICNS 2018 - Integrated Communications, Navigation, Surveillance Conference",,,,"3,00E+11","3,00E+116",2805.0,0,10.1109/ICNSURV.2018.8384864,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049933194&doi=10.1109%2fICNSURV.2018.8384864&partnerID=40&md5=04aff92485b94be3e224eac38bdffd77,"In order to realize the full potential of the Next Generation Air Transportation System (NextGen), improved management along planned trajectories between air navigation service providers (ANSPs) and system users (e.g., pilots and airline dispatchers) is needed. Automation improvements and increased data communications between aircraft and ground automation would make the concept of Management by Trajectory (MBT) possible. Key components of the MBT concept include: • The ability for air traffic controllers and managers to quickly generate, evaluate and implement changes to an aircraft's trajectory. • Imposing constraints on flight operator-preferred trajectories only to the extent necessary to maintain safe and efficient traffic flows. • A method for the exchange of trajectory information between ground automation systems and the aircraft that allows for trajectory synchronization and trajectory negotiation. MBT addresses shortfalls that remain in the Trajectory Based Operations (TBO) solution set, despite years of research into various aspects of transitioning from the current airspace environment to TBO. This paper provides findings and insights from a literature survey of TBO-related concepts and technologies. These insights can be applied to improve the feasibility and ultimate adoption of MBT.",,Air traffic control; Air transportation; Automation; Fighter aircraft; Navigation; Trajectories; Air navigation service providers; Air traffic controller; Airline dispatchers; Airspace environment; Automation systems; Next-generation air transportation systems; Trajectory information; Trajectory negotiation; Air navigation,Conference paper,Final,,Scopus,2-s2.0-85049933194,N/A,9.0
Marín B.; Alarcón S.; Giachetti G.; Snoeck M.,"Marín, Beatriz (24481674800); Alarcón, Sofía (57211589369); Giachetti, Giovanni (24481355300); Snoeck, Monique (55968864600)",24481674800; 57211589369; 24481355300; 55968864600,TesCaV: An Approach for Learning Model-Based Testing and Coverage in Practice,2020,Lecture Notes in Business Information Processing,385 LNBIP,,,302,317,15.0,6,10.1007/978-3-030-50316-1_18,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85087778009&doi=10.1007%2f978-3-030-50316-1_18&partnerID=40&md5=e71680e8d7cb246dde68133aa7393585,"Academy and industry permanently remark the importance of software-testing techniques to improve software quality and to reduce development and maintenance costs. A testing method to be considered for this purpose is Model-Based Testing (MBT), which generates test cases from a model that represents the structure and the behavior of the system to be developed. The generated test suite is easier to maintain and adapt to changes in requirements or evolution of the developed system. However, teaching and learning MBT techniques are not easy tasks; students need to know the different testing techniques to assure that the requirements are fulfilled as well as to identify any failure in the software system modeled. In this work, we present TesCaV, an MBT teaching tool for university students, which is based on a model-driven technology for the automatic software generation from UML diagrams. TesCaV allows validating the test cases defined by students and graphically determines the level of testing coverage over the system modeled. Preliminary results show TesCaV as a promising approach for MBT teaching/learning processes.",Coverage; Lessons learned; Model-Based Testing; Teaching/learning testing,Computer software selection and evaluation; Model checking; Software quality; Software testing; Students; Well testing; Maintenance cost; Model based testing; Software generation; Software testing techniques; Teaching and learning; Teaching/learning; Testing technique; University students; Learning systems,Conference paper,Final,,Scopus,2-s2.0-85087778009,"Coverage, Lessons learned, Model-Based Testing, Teaching/learning testing",16.0
Zhang M.; Ali S.; Yue T.; Norgre R.,"Zhang, Man (56990520700); Ali, Shaukat (56962801700); Yue, Tao (25651096400); Norgre, Roland (57190125873)",56990520700; 56962801700; 25651096400; 57190125873,Uncertainty-wise evolution of test ready models,2017,Information and Software Technology,87,,,140,159,19.0,13,10.1016/j.infsof.2017.03.003,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015382293&doi=10.1016%2fj.infsof.2017.03.003&partnerID=40&md5=da4f5fea4e0a1061764ef0930d0457ba,"Context Cyber-Physical Systems (CPSs), when deployed for operation, are inherently prone to uncertainty. Considering their applications in critical domains (e.g., healthcare), it is important that such CPSs are tested sufficiently, with the explicit consideration of uncertainty. Model-based testing (MBT) involves creating test ready models capturing the expected behavior of a CPS and its operating environment. These test ready models are then used for generating executable test cases. It is, therefore, necessary to develop methods that can continuously evolve, based on real operational data collected during the operation of CPSs, test ready models and uncertainty captured in them, all together termed as Belief Test Ready Models (BMs) Objective Our objective is to propose a model evolution framework that can interactively improve the quality of BMs, based on operational data. Such BMs are developed by one or more test modelers (belief agents) with their assumptions about the expected behavior of a CPS, its expected physical environment, and potential future deployments. Thus, these models explicitly contain subjective uncertainty of the test modelers. Method We propose a framework (named as UncerTolve) for interactively evolving BMs (specified with extended UML notations) of CPSs with subjective uncertainty developed by test modelers. The key inputs of UncerTolve include initial BMs of CPSs with known subjective uncertainty and real data collected from the operation of CPSs. UncerTolve has three key features: 1) Validating the syntactic correctness and conformance of BMs against real operational data via model execution, 2) Evolving objective uncertainty measurements of BMs via model execution, and 3) Evolving state invariants (modeling test oracles) and guards of transitions (modeling constraints for test data generation) of BMs with a machine learning technique. Results As a proof-of-concept, we evaluated UncerTolve with one industrial CPS case study, i.e., GeoSports from the healthcare domain. Using UncerTolve, we managed to evolve 51% of belief elements, 18% of states, and 21% of transitions as compared to the initial BM developed in an industrial setting. Conclusion UncerTolve can successfully evolve model elements of the initial BM, in addition to objective uncertainty measurements using real operational data. The evolved model can be used to generate additional test cases covering evolved model elements and objective uncertainty. These additional test cases can be used to test the current and future deployments of a CPS to ensure that it will handle uncertainty gracefully during its operations.",Belief model; Belief test ready model; Model evolution; Model-based testing; Uncertainty,Embedded systems; Health care; Learning systems; Model checking; Software testing; Uncertain systems; Cyber physical systems (CPSs); Machine learning techniques; Model based testing; Model evolution; Operating environment; Subjective uncertainty; Uncertainty; Uncertainty measurements; Uncertainty analysis,Article,Final,All Open Access; Hybrid Gold Open Access,Scopus,2-s2.0-85015382293,"Belief model, Belief test ready model, Model evolution, Model-based testing, Uncertainty",20.0
Leal L.; Montecchi L.; Ceccarelli A.; Martins E.,"Leal, Lucas (57211116981); Montecchi, Leonardo (25654395000); Ceccarelli, Andrea (18041935700); Martins, Eliane (7103315128)",57211116981; 25654395000; 18041935700; 7103315128,Exploiting MDE for platform-independent testing of service orchestrations,2019,"Proceedings - 2019 15th European Dependable Computing Conference, EDCC 2019",,,8893329,149,152,3.0,1,10.1109/EDCC.2019.00037,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85075631947&doi=10.1109%2fEDCC.2019.00037&partnerID=40&md5=86585563427ad4e01f2b36ac472dcccf,"Service Oriented Architecture (SOA) is a common design pattern that allows building applications composed of several services. It promotes features as interoperability, scalability, and software reuse. Services composing a SOA system may evolve and change during runtime, often outside the control of the owner of the application, which makes the verification and validation processes complex. Among all the automated techniques to validate the behavior of an SOA application, is Model-Based Testing (MBT). MBT requires an accurate model of the application in order to generate suitable test cases. However, the intrinsic of a SOA application sets significant challenges to MBT effectiveness. In this paper we discuss the challenges in the testing of SOA applications, and we propose the use of Model-Driven Engineering (MDE) to improve the flexibility of testing tools. Finally, we outline our plan for realizing MDE-driven MBT within an existing online testing framework.",Model-based testing; Model-driven engineering; Orchestration; SOA,Computer software reusability; Information services; Model checking; Automated techniques; Building applications; Model based testing; Model-driven Engineering; Orchestration; Platform independent; Service orchestration; Verification-and-validation; Service oriented architecture (SOA),Conference paper,Final,All Open Access; Green Open Access,Scopus,2-s2.0-85075631947,"Model-based testing, Model-driven engineering, Orchestration, SOA",4.0
Bernard E.; Botella J.; Ambert F.; Legeard B.; Utting M.,"Bernard, Elodie (57219183437); Botella, Julien (47061115200); Ambert, Fabrice (55580956100); Legeard, Bruno (6603012582); Utting, Mark (6603922152)",57219183437; 47061115200; 55580956100; 6603012582; 6603922152,Tool Support for Refactoring Manual Tests,2020,"Proceedings - 2020 IEEE 13th International Conference on Software Testing, Verification and Validation, ICST 2020",,,9159104,332,342,10.0,2,10.1109/ICST46399.2020.00041,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091592642&doi=10.1109%2fICST46399.2020.00041&partnerID=40&md5=e395c99a61ad49508a2226b1732b9320,"Manual test suites are typically described by natural language, and over time large manual test suites become disordered and harder to use and maintain. This paper focuses on the challenge of providing tool support for refactoring such test suites to make them more usable and maintainable. We describe how we have applied various machine-learning and NLP techniques and other algorithms to the refactoring of manual test suites, plus the tool support we have built to embody these techniques and to allow test suites to be explored and visualised. We evaluate our approach on several industry test suites, and report on the time savings that were obtained.",Lightweight MBT; Machine Learning for Software Testing; Test suite minimisation; Test suite refactoring,Machine learning; Testing; Verification; Manual tests; Natural languages; Nlp techniques; Refactorings; Tool support; Software testing,Conference paper,Final,All Open Access; Green Open Access,Scopus,2-s2.0-85091592642,"Lightweight MBT, Machine Learning for Software Testing, Test suite minimisation, Test suite refactoring",11.0
Li R.C.; Zhu G.G.,"Li, Ruixue C. (57204818393); Zhu, Guoming G. (26642277500)",57204818393; 26642277500,Model-based knock prediction and its stochastic feedforward compensation,2020,"IEEE/ASME International Conference on Advanced Intelligent Mechatronics, AIM",2020-July,,9158927,637,642,5.0,3,10.1109/AIM43001.2020.9158927,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85090391381&doi=10.1109%2fAIM43001.2020.9158927&partnerID=40&md5=1734689f58ad58c19d1176b21b3df075,"This article studies the correlation between incylinder mixture temperature at intake valve closing and the engine knock, along with cycle-to-cycle knock variability based on a knock predictive model developed earlier. Based on the correlated stochastic relationship, a feedforward knock limit control strategy is developed to reduce the knock cycle-to-cycle variability and maintain the knock mean-intensity within a desired up bound while keeping spark timing close to engine MBT (maximum brake torque) timing as close as possible. The proposed feedforward control strategy is evaluated based on the knock predictive model in terms of knock mean-intensity and standard deviation and demonstrated its capability of reducing the knock cycle-to-cycle variability under the knock intensity constraint.",,Intelligent mechatronics; Predictive analytics; Stochastic models; Stochastic systems; Control strategies; Feed-forward compensation; In-cylinder mixtures; Intake valve closings; Maximum brake torques; Model-based OPC; Predictive modeling; Standard deviation; Combustion knock,Conference paper,Final,,Scopus,2-s2.0-85090391381,N/A,6.0
Gauthier J.-M.,"Gauthier, Jean-Marie (55247222300)",55247222300,"Test generation for RTES from SysML models: Context, motivations and research proposal",2013,"Proceedings - IEEE 6th International Conference on Software Testing, Verification and Validation, ICST 2013",,,6569775,503,504,1.0,3,10.1109/ICST.2013.83,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883315667&doi=10.1109%2fICST.2013.83&partnerID=40&md5=1294fa892ce4fd575a0f187b0d698f0b,"This paper presents the context, motivations and perspectives of my PhD research about model-based testing for real-time and embedded systems using SysML. This work is based on an existing model-based approach which has been proposed during the VETESS project. This approach aims to generate tests for embedded systems. In this paper, we identify areas of improvement, which permit us to evolve the initial approach by taking into account real-time aspects. This will contribute to an automated Model-Based Testing toolchain for real-time and embedded systems. © 2013 IEEE.",Model-Based Testing; Real-time systems; SysML,Embedded systems; Motivation; Real time systems; Model based approach; Model based testing; Real time aspects; Real-time and embedded systems; Research proposals; SysML; Test generations; Software testing,Conference paper,Final,,Scopus,2-s2.0-84883315667,"Model-Based Testing, Real-time systems, SysML",2.0
Kocsis M.C.; Mitchell R.; Moiz A.A.; Kalaskar V.; Williams D.R.; Sjovall S.,"Kocsis, Michael C. (55965794300); Mitchell, Robert (57200166618); Moiz, Ahmed Abdul (56748134500); Kalaskar, Vickey (36160132600); Williams, D. Ryan (57213469129); Sjovall, Scott (57216543136)",55965794300; 57200166618; 56748134500; 36160132600; 57213469129; 57216543136,Improving Heavy Duty Natural Gas Engine Efficiency: A Systematic Approach to Application of Dedicated EGR,2020,SAE Technical Papers,2020-April,April,,,,,2,10.4271/2020-01-0818,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85083856862&doi=10.4271%2f2020-01-0818&partnerID=40&md5=5eeca7dabb2fd368a6c364c712c7185b,"The worldwide trend of tightening CO2 emissions standards and desire for near zero emissions is driving development of high efficiency natural gas engines for a low CO2 replacement of traditional diesel engines. A Cummins Westport ISX12 G was previously converted to a Dedicated EGR® (D-EGR®) configuration with two out of the six cylinders acting as the EGR producing cylinders. Using a systems approach, the combustion and turbocharging systems were optimized for improved efficiency while maintaining the potential for achieving 0.02 g/bhp-hr NOX standards. A prototype variable nozzle turbocharger was selected to maintain the stock torque curve. The EGR delivery method enabled a reduction in pre-turbine pressure as the turbine was not required to be undersized to drive EGR. A high energy Dual Coil Offset (DCO®) ignition system was utilized to maintain stable combustion with increased EGR rates. High compression ratio, reduced squish pistons were designed to maintain MBT combustion phasing and fast burn rates along the torque curve. The final engine configuration was tested on the Heavy-Duty Supplemental Emissions Test (SET), a 13-mode steady-state engine dynamometer test. The engine was able to achieve a weighted average efficiency improvement of 12% over the baseline configuration with a peak BTE of 41.7%. © 2020 SAE International. All Rights Reserved.",,Carbon dioxide; Gas engines; Ignition; Natural gas; Baseline configurations; Combustion phasing; Engine configuration; High compression ratio; Near-zero emissions; Systems approach; Turbocharging systems; Weighted averages; Gas emissions,Conference paper,Final,,Scopus,2-s2.0-85083856862,,
Glawar A.F.G.; Ziman P.R.; Wu K.; Natarajan V.; Wolgast E.J.; Dankers C.; Groves A.P.,"Glawar, Andreas F. G. (57197747063); Ziman, Pauline R. (55687813800); Wu, Kaihua (57204725403); Natarajan, Vinod (7102571668); Wolgast, Eike J. (57204727577); Dankers, Carolin (57204721386); Groves, Adrian P. (57197743730)",57197747063; 55687813800; 57204725403; 7102571668; 57204727577; 57204721386; 57197743730,"Understanding the Adverse Effects of Inlet Valve Deposits on SI Engine Operation, through a Novel Technique to Create Surrogate Deposits",2018,SAE Technical Papers,2018-September,,,,,,2,10.4271/2018-01-1742,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056885663&doi=10.4271%2f2018-01-1742&partnerID=40&md5=589b2346d9280da16d2470b18fd56477,"For gasoline spark ignition engines, port fuel injection (PFI) on a global basis remains the most common type of fuel delivery. When operated with lower quality fuels and lubricants, PFI engines are prone to suffering from the build-up of harmful deposits on critical engine parts including the inlet valves. High levels of inlet valve deposits (IVDs) have been associated with drivability issues like engine stumble and hesitation on sudden acceleration. Fuels formulated with the appropriate level of deposit control additive (DCA) can maintain engine cleanliness and even remove deposits from critical components. This study, involving a single cylinder research bench engine operated in PFI injection mode and heavily augmented with measurement equipment, aimed to gain a deeper understanding of the detrimental impacts of IVDs on engine efficiency and performance. Guided by 3D-scans of carbonaceous IVDs sourced from industry standard tests conducted per ASTM D5500, surrogate metal deposits were generated, utilizing the novel approach of powder-laser-cladding (PLC). The modified inlet valves were evaluated in the research engine across eight different speed load conditions including full-load. Using this approach and building on the results previously obtained on the industry standard Mercedes-Benz M111 bench engine, it was possible to quantify an increase of more than 3 crank angle degrees in combustion duration at a 95% level of statistical confidence, due to the presence of the simulated IVDs. Similarly, IVDs limited the quantity of air entering the cylinder which reduced power output of the engine for a given condition by 1.9% at a 99% level of statistical confidence. These effects were corroborated by supporting secondary metrics such as exhaust temperature increases and peak pressure reductions. Overall, it was shown that the presence of IVDs shifted the center of combustion away from the engine's optimum point for efficiency as defined by the maximum brake torque (MBT) spark timing. © 2018 Shell Global Solutions (US) Inc.",,Combustion; Deposits; Diesel engines; Efficiency; Fuels; Combustion duration; Crank angle degrees; Exhaust temperature; Industry standards; Maximum brake torques; Measurement equipment; Port fuel injections; Statistical confidence; Engine cylinders,Conference paper,Final,,Scopus,2-s2.0-85056885663,,
Sun F.; Liao L.; Zhang L.,"Sun, Fuzhen (36572575800); Liao, Lejian (7202542567); Zhang, Longbo (14520051300)",36572575800; 7202542567; 14520051300,Model-based testing of web service with EFSM,2014,Advances in Intelligent Systems and Computing,279,,,91,100,9.0,2,10.1007/978-3-642-54927-4_9,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921846492&doi=10.1007%2f978-3-642-54927-4_9&partnerID=40&md5=98c7fb50856c92b4b616593bd10b6ab3,"Web services are becoming more and more widespread as an emerging technology; it is hard to test Web services because they are distributed applications with numerous aspects of runtime behavior that are different from typical applications. This paper presents a new approach to testing Web services based on Extended Finite State Machine (EFSM). Web Services Description Language (WSDL) file alone does not provide dynamic behavior information. This problem can be overcome by appending the formal model of EFSM to standard WSDL, we can generate a set of test cases which has a better test coverage than other methods. Moreover, a procedure for deriving an EFSM model from WSDL specification is provided to help a service provider augment, the EFSM model describing dynamic behaviors of the Web service. To show the efficacy of our approach, we applied our approach to Parlay-X Web services. In this way, we can test Web services with greater confidence in potential fault detection.",Extended finite state machine (EFSM); Fault detection; Model-based testing; Web service,Fault detection; Intelligent systems; Knowledge engineering; Logic circuits; Model checking; Signal encoding; Social networking (online); Software testing; Websites; Distributed applications; Emerging technologies; Extended finite state machine; Model based testing; Parlay-X Web services; Runtime behaviors; Typical application; Web services description languages; Web services,Conference paper,Final,,Scopus,2-s2.0-84921846492,"Extended finite state machine (EFSM), Fault detection, Model-based testing, Web service",10.0
Kushik N.; Yevtushenko N.; López J.,"Kushik, Natalia (46061062700); Yevtushenko, Nina (6701637985); López, Jorge (57220756264)",46061062700; 6701637985; 57220756264,Testing Against Non-deterministic FSMs: A Probabilistic Approach for Test Suite Minimization,2022,Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics),13045 LNCS,,,55,61,6.0,1,10.1007/978-3-031-04673-5_4,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85130215440&doi=10.1007%2f978-3-031-04673-5_4&partnerID=40&md5=b87699b9887675e52a59253d4f785d23,"The paper is devoted to model based testing against non-deterministic specifications. Such test derivation strategies are well developed, for example against non-deterministic Finite State Machines, however the length of the corresponding test suite can be exponential w.r.t. the number of specification states. We therefore discuss how a test suite can be minimized or reduced when certain level of guarantee concerning its fault coverage is still preserved. The main idea behind the approach is to augment the specification by assigning probabilities for the non-deterministic transitions and later on evaluate the probability of each test sequence to detect the relevant faulty implementation. Given a probability P which is user-defined, we propose an approach for minimizing a given exhaustive test suite TS such that, it stays exhaustive with the probability no less than P.",Guaranteed fault coverage; Model based testing; Non-deterministic finite state machines; Probabilistic approach,Probability; Software testing; Specifications; Deterministic specifications; Deterministics; Exponentials; Fault coverages; Guaranteed fault coverage; Model based testing; Non-deterministic finite state machine; Probabilistics approach; Test derivation; Test suite minimization; Model checking,Conference paper,Final,,Scopus,2-s2.0-85130215440,"Guaranteed fault coverage, Model based testing, Non-deterministic finite state machines, Probabilistic approach",7.0
Viollet Y.; Abdullah M.; Alhajhouje A.; Chang J.,"Viollet, Yoann (55677718400); Abdullah, Marwan (56747190600); Alhajhouje, Abdullah (56747941200); Chang, Junseok (24342997000)",55677718400; 56747190600; 56747941200; 24342997000,Characterization of High Efficiency Octane-On-Demand Fuels Requirement in a Modern Spark Ignition Engine with Dual Injection System,2015,SAE Technical Papers,2015-April,April,,,,,24,10.4271/2015-01-1265,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938324690&doi=10.4271%2f2015-01-1265&partnerID=40&md5=52c151fbcef7478c659343e886348e5e,"In a regulatory environment for spark ignition (SI) engines where the focus is continuously looking into improvements in fuel economy and reduction in noxious emissions, the challenges to achieve future requirements are utmost. To effectively reduce CO2 emissions on a well-to-wheel basis, future fuels enabling high efficiency SI engines will have to not only satisfy advanced engine requirements, i.e. high knock resistance, but also produce less CO2 emissions in the refinery. This paper describes how to characterize SI combustion's on-demand octane requirement with three different dual fuel configurations. Refinery naphtha was used for low octane component, and three oxygenates were used for high octane knock inhibiting component, such as, Methanol and Methyl tert-butyl ether (MTBE) and Ethyl tert-butyl ether (ETBE). Each low and high octane fuel was introduced via production gasoline direct injector (DI) and port fuel injector (PFI) in both configurations. It was found that benefits of the high RON component was amplified when it was introduced through DI while the low RON naphtha was injected in PFI. Methanol had been shown to be most effective through DI due to its high heat of evaporation and charge cooling. Consequently, the minimum methanol requirement to maintain MBT is less than MTBE or ETBE by volume. An optimum oxygenate map was found within a range of 1500 to 3500 rpm in speed and 1bar to 13bar Brake Mean Effective Pressure (BMEP) in load range conditions. As a result, the engine could operate solely with low octane naphtha, up to loads of 4-bar BMEP. At a high load condition, such as 1500 rpm, 13bar BMEP, minimum requirement of methanol was 43% of total dual fuel, while MTBE requirement was 74%. This was because methanol's charge cooling in the chamber had a dominant effect on knock suppression, although a RON of MTBE was higher than methanol. On the contrary, the total fuel consumption with naphtha-methanol was higher than one with naphtha-MTBE. This was due to the fact that methanol's lower energy value required more naphtha as the primary fuel source, while MTBE could contribute 1.5 times higher energy than methanol. Three fuels with both high and low octane properties could provide the optimum octane on an as-required basis. This can enable engine manufacturers to further downsize engines by means of an additional parameter to dynamically control the knock boundary. Copyright © 2015 SAE International.",,Carbon dioxide; Dual fuel engines; Ethers; Fuel economy; Fuels; Methanol; Naphthas; Refining; Brake mean effective pressures; Dual injection system; Engine manufacturers; Ethyl tert-butyl ether; Methyl tert butyl ether; Minimum requirements; Port fuel injectors; Regulatory environment; Direct injection,Conference paper,Final,,Scopus,2-s2.0-84938324690,,
Amalfitano D.; Amatucci N.; Fasolino A.R.; Gentile U.; Mele G.; Nardone R.; Vittorini V.; Marrone S.,"Amalfitano, Domenico (25926238800); Amatucci, Nicola (55843621200); Fasolino, Anna Rita (7006159957); Gentile, Ugo (56352190200); Mele, Gianluca (56352190100); Nardone, Roberto (50861911000); Vittorini, Valeria (6701381302); Marrone, Stefano (57203296376)",25926238800; 55843621200; 7006159957; 56352190200; 56352190100; 50861911000; 6701381302; 57203296376,Improving code coverage in android apps testing by exploiting patterns and automatic test case generation,2014,"WISE 2014 - Proceedings of the 2014 ACM International Workshop on Long-Term Industrial Collaboration on Software Engineering, Co-located with ASE 2014",,,,29,34,5.0,7,10.1145/2647648.2656426,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908645493&doi=10.1145%2f2647648.2656426&partnerID=40&md5=a257ffe40a8fd8c703e9e69893206a86,"This work aims at defining a procedure and a set of mechanisms able to improve the quality of the code coverage in automated software reverse engineering processes, and specifically in automated GUI-driven testing of Android apps. Existing automated model-based testing techniques, based on reverse engineering, generate test cases which can be executed directly on the software's GUI. We propose to augment the code coverage of these techniques, by exploiting information from patterns, defined at different levels (application design, state-based model, interaction with Android services), and generating additional test cases that may in crease the coverage capability of GUI-Ripping based testing technique. The generation of the additional test cases is accomplished by defining an automatable procedure which exploits an existing GUI testing approach and a pattern based approach used in a different context. Copyright 2014 ACM.",Automatic test case generation; GUI testing; Mobile applications; Model driven engineering; Reverse engineering,Android (operating system); Automatic programming; Automation; Codes (symbols); Graphical user interfaces; Model checking; Reverse engineering; Software engineering; Application design; Automated modeling; Automatic test-case generations; GUI testing; Mobile applications; Model-driven Engineering; Software reverse engineering; State-based models; Software testing,Conference paper,Final,,Scopus,2-s2.0-84908645493,"Automatic test case generation, GUI testing, Mobile applications, Model driven engineering, Reverse engineering",6.0
Fan L.; Chen S.; Xu L.; Yang Z.; Zhu H.,"Fan, Lingling (57197024797); Chen, Sen (57190395316); Xu, Lihua (55846204400); Yang, Zongyuan (8409636800); Zhu, Huibiao (14046380100)",57197024797; 57190395316; 55846204400; 8409636800; 14046380100,Model-Based continuous verification,2016,"Proceedings - Asia-Pacific Software Engineering Conference, APSEC",0,,7890574,81,88,7.0,1,10.1109/APSEC.2016.022,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85018497743&doi=10.1109%2fAPSEC.2016.022&partnerID=40&md5=cbbda0875911f4d9dff774426f3e38ed,"Model-based engineering has emerged as a key set of technologies to engineer software systems. While system source code is expected to match with the designed model, legacy systems and workarounds during deployment would undoubtedly change the source code, making the actual running implementation mismatch with its model. Such mismatch poses a challenge of maintaining the conformance between the model and the corresponding implementation. Prior techniques, such as model checking and model-based testing, simply assumed the sole correctness of the model or the implementation, which is naive since they both could contain correct information (e.g. representing either the software requirements or the actual running environment).In this paper, we aim to address this problem through model-based continuous verification (ConV), an iterative verification process that links the traditional model checking phase with the software testing phase to a feedback loop, ensuring the conformance between the system model and its implementation. It allows to execute the abstract test cases over the implementation through a semi-automatic binding mechanism to guide the update of the code, and augments system properties from the actually running system to guide the update of the model through model checking. Based on these techniques, we implemented Eunomia, a conformance verification system, to support the continuous verification process. Experiments show that Eunomia can effectively detect and locate inconsistencies both in the model and the source code.",Consistency checking; Linear temporal logic; Model checking; Model-based testing,Codes (symbols); Computer programming languages; Iterative methods; Legacy systems; Software testing; Binding mechanisms; Consistency checking; Linear temporal logic; Model based testing; Model-based engineering; Software requirements; Verification process; Verification systems; Model checking,Conference paper,Final,,Scopus,2-s2.0-85018497743,"Consistency checking, Linear temporal logic, Model checking, Model-based testing",8.0
Chantit S.; Essebaa I.,"Chantit, Salima (57191413214); Essebaa, Imane (57191406520)",57191413214; 57191406520,Towards an automatic model-based scrum methodology,2021,Procedia Computer Science,184,,,797,802,5.0,6,10.1016/j.procs.2021.03.099,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85106748671&doi=10.1016%2fj.procs.2021.03.099&partnerID=40&md5=9b8b01b3786fc1a448e17e978c009aa7,"Software systems evolve continuously and must be developed quickly to fit user requirements and new advances in technology. This has led the software engineering to propose several methods and approaches to overcome the development and maintenance of these software systems. In this regard, Agile Methodologies and Model-Driven Engineering (MDE) are two main approaches that have emerged in recent years and suggest a solution to some of the issues associated with Software systems developments. MDE focuses on software reuse through models and on generative approaches based on separation of concerns whereas Agile Methods promote the use of simpler models and best practices for programming to achieve quick feedback from clients within a development process. However, these two approaches have evolved separately and there are only a few works related to their combination. This paper presents a customized V development life cycle based on models which combines the two MDE variants: The MDA approach in the V left branch with the MBT approach to generate tests of the V right branch. In addition, we integrate this customized V life cycle in the agile Scrum methodology to facilitate the management of each Scrum sprint.",Agile methodologies; Model driven architecture; Model driven engineering; Model-based testing; Scrum; V development life cycle,Agile manufacturing systems; Computer software reusability; Model checking; Software architecture; Software design; Agile Methodologies; Automatic modeling; Model based testing; Model driven architectures; Model-based OPC; Model-driven Engineering; Scra; Scrum methodologies; Software-systems; V development life cycle; Life cycle,Conference paper,Final,All Open Access; Gold Open Access,Scopus,2-s2.0-85106748671,"Agile methodologies, Model driven architecture, Model driven engineering, Model-based testing, Scrum, V development life cycle",6.0
Rapos E.J.; Cordy J.R.,"Rapos, Eric J. (55253700900); Cordy, James R. (6603931586)",55253700900; 6603931586,SimEvo: A Toolset for Simulink Test Evolution & Maintenance,2018,"Proceedings - 2018 IEEE 11th International Conference on Software Testing, Verification and Validation, ICST 2018",,,,410,415,5.0,4,10.1109/ICST.2018.00049,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85048382239&doi=10.1109%2fICST.2018.00049&partnerID=40&md5=e6d19165ef47eb356dd1cc98767fa662,"As Simulink models evolve and change during development, test evolution and maintenance can often be overlooked. SimEvo provides a toolset to assist Simulink developers in coevolving test harnesses and test cases alongside their source models. Primarily a collection of testing tools, SimEvo combines the impact analysis features of the SimPact impact analysis tool to identify instances of necessary test case changes and potentially affected blocks, with the SimTH test harness generator to automatically determine if changes need to be made to the test harness model, and automatically generate a new one if necessary. This paper examines the implementation of SimTH, its integration with SimPact into the workbench SimEvo, and an overall analysis of the contributions of the toolset.",Model Based Testing; Simulink; Test Evolution; Test Harness Generation; Test Maintenance; Tool Development,Maintenance; Model checking; Model based testing; Simulink; Test harness; Test maintenances; Tool development; Software testing,Conference paper,Final,,Scopus,2-s2.0-85048382239,"Model Based Testing, Simulink, Test Evolution, Test Harness Generation, Test Maintenance, Tool Development",6.0
Khoo T.P.,"Khoo, Teck Ping (57204727337)",57204727337,Model based testing of cyber-physical systems,2018,Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics),11232 LNCS,,,423,426,3.0,2,10.1007/978-3-030-02450-5_27,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056825782&doi=10.1007%2f978-3-030-02450-5_27&partnerID=40&md5=6cf8b7e1cc8f08a5e363e322e4daef18,"Black-box testing has been extensively applied to test models of Cyber-Physical systems (CPS) since these models are not often amenable to static and symbolic testing and verification. Black-box testing, however, requires to execute the model under test for a large number of candidate test inputs. This poses a challenge for a large and practically-important category of CPS models, known as compute-intensive CPS (CI-CPS) models, where a single simulation may take hours to complete. We propose a novel approach, namely ARIsTEO, to enable effective and efficient testing of CI-CPS models. Our approach embeds black-box testing into an iterative approximation-refinement loop. At the start, some sampled inputs and outputs of the CI-CPS model under test are used to generate a surrogate model that is faster to execute and can be subjected to black-box testing. Any failure-revealing test identified for the surrogate model is checked on the original model. If spurious, the test results are used to refine the surrogate model to be tested again. Otherwise, the test reveals a valid failure.We evaluated ARIsTEO by comparing it with S-Taliro, an open-source and industry-strength tool for testing CPS models. Our results, obtained based on five publicly-available CPS models, show that, on average, ARIsTEO is able to find 24% more requirements violations than S-Taliro and is 31% faster than S-Taliro in finding those violations. We further assessed the effectiveness and efficiency of ARIsTEO on a large industrial case study from the satellite domain. In contrast to S-Taliro, ARIsTEO successfully tested two different versions of this model and could identify three requirements violations, requiring four hours, on average, for each violation.",Cyber-Physical Systems; Model Based Testing; Testing framework,Cyber Physical System; Embedded systems; Formal methods; Model checking; Specifications; Autonomous Vehicles; Cyber physical systems (CPSs); Health-care system; Industrial systems; Model based testing; System safety; System specification; Testing framework; Interoperability,Conference paper,Final,,Scopus,2-s2.0-85056825782,"Cyber-physical systems, Falsification, Model testing, Robustness, Search-based testing",13.0
Herpel H.J.; Kerep M.; Li J.; Xie J.; Johansen B.; Kvinnesland K.; Krueger S.; Barrios P.,"Herpel, H.J. (6602507372); Kerep, M. (57131036900); Li, J. (8273831100); Xie, J. (57190225513); Johansen, B. (57190223018); Kvinnesland, K. (12786475200); Krueger, S. (57191863751); Barrios, P. (57190223610)",6602507372; 57131036900; 8273831100; 57190225513; 57190223018; 12786475200; 57191863751; 57190223610,Model based testing of satellite on-board software - An industrial use case,2016,IEEE Aerospace Conference Proceedings,2016-June,,7500845,,,,6,10.1109/AERO.2016.7500845,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978525310&doi=10.1109%2fAERO.2016.7500845&partnerID=40&md5=e5cfe29c286237503967d31239e14f09,"In this paper we describe a Model Based approach to testing of on-board software and compare it with traditional validation strategy currently applied to satellite software. The major problems that software engineering will face over at least the next two decades are increasing application complexity driven by the need for autonomy and serious application robustness. In other words, how do we actually get to declare success when trying to build applications one or two orders of magnitude more complex than today's applications. To solve the problems addressed above the software engineering process has to be improved at least for two aspects: 1) Software design and 2) Software testing. The software design process has to evolve towards model-based approaches with extensive use of code generators. Today, testing is an essential, but time and resource consuming activity in the software development process. Generating a short, but effective test suite usually requires a lot of manual work and expert knowledge. In a model-based process, among other subtasks, test construction and test execution can also be partially automated. The basic idea behind the presented study was to start from a formal model (e.g. State Machines), generate abstract test cases which are then converted to concrete executable test cases (input and expected output pairs). The generated concrete test cases were applied to an on-board software. Results were collected and evaluated wrt. applicability, cost-efficiency, effectiveness at fault finding, and scalability. © 2016 IEEE.",,Application programs; Concretes; Formal methods; Model checking; Software design; Software engineering; Testing; Application complexity; Industrial use case; Model based approach; Model based testing; Software design process; Software development process; Software engineering process; Validation strategies; Software testing,Conference paper,Final,,Scopus,2-s2.0-84978525310,,
Proll R.; Bauer B.,"Proll, Reinhard (57201995163); Bauer, Bernhard (35241718100)",57201995163; 35241718100,A model-based test case management approach for integrated sets of domain-specific models,2018,"Proceedings - 2018 IEEE 11th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2018",,,,175,184,9.0,2,10.1109/ICSTW.2018.00048,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85050967706&doi=10.1109%2fICSTW.2018.00048&partnerID=40&md5=e99cb437a53d163a646a0980a3dd5ab5,"Due to rapid improvements in the area of embedded processing hardware, the complexity of developed systems constantly increases. In order to ensure a high quality level of such systems, related quality assurance concepts have to evolve. The introduction of Model-Based Testing (MBT) approaches has shown promising results by automating and abstracting multiple activities of the software testing life cycle. Nevertheless, there is a strong need for approaches supporting scoped test models, i.e. subsets of test cases, reflecting specific test purposes driven by risk-oriented development strategies. Therefore, we developed an integrated and model-based approach supporting test case management, which incorporates the beneficial aspects of abstract development methodologies with predominant research for test case management in non-model-based scenarios. Based on a new model artifact, the integration model, tasks like cross-domain information mapping and the integration of domain-specific KPIs derived by analyses favor the subsequently applied constraint-based mechanism for test case management. Further, a prototypical implementation of these concepts within the Architecture And Analysis Framework (A3F) is elaborated and further evaluated based on representative application scenarios. A comparative view on related work leads to a conclusive statement regarding our future work.",Model-Based Testing; Test Case Management; Test Model Scoping; Test Prioritization; Test Selection; Test Suite Reduction,Embedded systems; Information management; Life cycle; Model checking; Quality assurance; Research and development management; Model based testing; Scoping; Test case; Test prioritization; Test selection; Test suite reduction; Software testing,Conference paper,Final,All Open Access; Green Open Access,Scopus,2-s2.0-85050967706,"Model-Based Testing, Test Case Management, Test Model Scoping, Test Prioritization, Test Selection, Test Suite Reduction",10.0
Bernard E.; Ambert F.; Legeard B.,"Bernard, Elodie (57219183437); Ambert, Fabrice (55580956100); Legeard, Bruno (6603012582)",57219183437; 55580956100; 6603012582,Supporting efficient test automation using lightweight MBT,2020,"Proceedings - 2020 IEEE 13th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2020",,,9155866,84,94,10.0,1,10.1109/ICSTW50294.2020.00028,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85091755014&doi=10.1109%2fICSTW50294.2020.00028&partnerID=40&md5=5a51ced1a46abac96ffe63fc0f337115,"The Agile and DevOps transformation of software development practices enhances the need for increased automation of functional testing, especially for regression testing. This poses challenges both in the effort that needs to be devoted to the creation and maintenance of automated test scripts, and in their relevance (i.e. their alignment with business needs). Test automation is still difficult to implement and maintain and the return on investment comes late while projects tend to be short. In this context, we have experimented a lightweight model-based test automation approach to address both productivity and relevance challenges. It integrates test automation through a simple process and tool-chain experimented on large IT projects.",,Automation; Model checking; Software design; Testing; Automated test; Business needs; Functional testing; IT project; Model-based test; Regression testing; Software development practices; Test Automation; Software testing,Conference paper,Final,All Open Access; Green Open Access,Scopus,2-s2.0-85091755014,N/A,11.0
Gong X.; Li H.; Liu X.; Wang H.; Ni Y.; Lei Y.; Zhou R.; Zou W.; Tang Y.; Liu S.,"Gong, Xiaoli (57218205837); Li, Haimin (37112722400); Liu, Xingchong (57210824687); Wang, Hanyu (55697962900); Ni, Yafei (57249230400); Lei, Yue (57249942200); Zhou, Ruonan (57226467511); Zou, Wenjing (57350476600); Tang, Yanling (57609045200); Liu, Shuqian (57610108000)",57218205837; 37112722400; 57210824687; 55697962900; 57249230400; 57249942200; 57226467511; 57350476600; 57609045200; 57610108000,High Moisture Stability for Enhanced Quality Perovskite Solar Cells Induced by Front and Back Layer Synergistic Passivation of Perovskite,2022,Solar RRL,6,10,2200487,,,,1,10.1002/solr.202200487,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85135450559&doi=10.1002%2fsolr.202200487&partnerID=40&md5=248a39dbde9b8f41fdcc3c1a485d513d,"Moisture stability is one of the key factors that hinders the commercialization of perovskite solar cells (PSCs). Herein, a new method of front and back layer synergistic passivation of perovskite is investigated. On the front layer, porous PbI2 nanostructures are induced by N-tert-butyl-2-benzothiazolesulfenamide (TBBS), which is added into PbI2 precursor solution and thermally decomposed to tert-butylamine (TBA) and 2-mercaptobenzothiazole (2-MBT) during annealing process. TBA volatilization leaves voids to induce porous PbI2, promoting diffusion of organic salts, facilitating crystallization of perovskite. Thickness of perovskite with TBBS doping increases from 527.7 to 561.2 nm, and the champion power conversion efficiency (PCE) increases from 19.71% to 20.97%. On the back layer, hydrophobic hole transport material PTAA is introduced onto perovskite surface to fill cation vacancies. Eventually, the highest efficiency of 22.35% with outstanding moisture stability is achieved after front and back layer synergistic passivation, which can maintain 71.14% of its initial efficiency after 7 days under high relative humidity (RH = 65 ± 2%) in ambient conditions without any encapsulation, while the control one can only remain 12.38%. © 2022 Wiley-VCH GmbH.",perovskite solar cells; porous PbI<sub>2</sub>; stability; synergistic passivation,Durability; Efficiency; Humidity control; Layered semiconductors; Lead compounds; Passivation; Perovskite solar cells; Stability; 2-mercaptobenzothiazole; Annealing process; Butylamines; Commercialisation; High moisture; Key factors; Moisture stability; Porous PbI2; Precursor solutions; Synergistic passivation; Perovskite,Article,Final,,Scopus,2-s2.0-85135450559,,
Kan X.; Zhou D.; Yang W.; Zhai X.; Wang C.-H.,"Kan, Xiang (57192720528); Zhou, Dezhi (56410246600); Yang, Wenming (26533639100); Zhai, Xiaoqiang (7006359384); Wang, Chi-Hwa (35239227700)",57192720528; 56410246600; 26533639100; 7006359384; 35239227700,An investigation on utilization of biogas and syngas produced from biomass waste in premixed spark ignition engine,2018,Applied Energy,212,,,210,222,12.0,65,10.1016/j.apenergy.2017.12.037,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85037609337&doi=10.1016%2fj.apenergy.2017.12.037&partnerID=40&md5=b45f2dd70cec1ad3cdb044ba6b108c55,"Syngas and biogas are two typical biofuels generated from biomass wastes through gasification and anaerobic digestion processes, which are considered to be the future fuels for IC engines. In this work, the utilization of biogas and syngas produced from horticultural waste in a premixed spark ignition engine was investigated. An experimentally validated KIVA4-based CFD simulation integrated with CHEMKIN was performed to evaluate engine performance fuelled by syngas and biogas under both single and blended-fuel modes. Effects of ignition timing, hydrogen content in syngas and methane content in biogas on both energetic and environmental performance have been studied. The indicated thermal efficiency (ITE) of syngas fueled engine at wide open throttle (WOT) condition under maximum brake torque (MBT) operation was found to be higher than that of biogas fueled engine, meanwhile, with much lower NOx emission. In addition, a comparison of the engine performance between the single and blended-fuel modes under different syngas mixing ratios was conducted in terms of ITE and NOX emission. The results suggest that the utilization of syngas and biogas under blended-fuel mode can not only maintain the MBT energetic performance under single-fuel mode, but also show its potential in reducing NOx emission and lessening the tendency of knock onset.",Biogas; Blended fuel; Experiment; KIVA-CHEMKIN; SI engine; Syngas,Anaerobic digestion; Biofuels; Engines; Environmental management; Experiments; Nitrogen oxides; Synthesis gas; Anaerobic digestion process; Blended fuels; CHEMKIN; Environmental performance; Indicated thermal efficiency; Maximum brake torques; SI Engines; Syn-gas; anaerobic digestion; biofuel; biogas; biomass; emission; engine; experimental study; hydrogen; methane; nitric oxide; operations technology; performance assessment; Biogas,Article,Final,,Scopus,2-s2.0-85037609337,"Biogas, Blended fuel, Experiment, KIVA-CHEMKIN, SI engine, Syngas",13.0
Ding Z.; Jiang M.; Chen H.; Jin Z.; Zhou M.,"Ding, Zuohua (23990419300); Jiang, Mingyue (35100541600); Chen, Haibo (58369794400); Jin, Zhi (8961795500); Zhou, Mengchu (7403506743)",23990419300; 35100541600; 58369794400; 8961795500; 7403506743,Petri net based test case generation for evolved specification,2016,Science China Information Sciences,59,8,80105,,,,8,10.1007/s11432-016-5598-5,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84980407668&doi=10.1007%2fs11432-016-5598-5&partnerID=40&md5=4bc69fe41d35fc78cf3b291fdd65e148,"Model-based testing can use a model to test a concrete program’s implementation. When the model is changed due to the evolution of the specification, it is important to maintain the test suites up to date, such that it can be used for regression testing. A complete regeneration of the whole test suite from the new model, although inefficient, is still frequently used in practice. To address this problem effectively, we propose a test case reusability analysis technique to identify reusable test cases of the original test suite based on graph analysis, such that we can generate new test cases to cover only the change-related parts of the new model. The Market Information System (MIS) is employed to demonstrate the feasibility and effectiveness of the proposed method. Our experimental results show that the use of our method saves about 31.5% test case generation cost. © 2016, Science China Press and Springer-Verlag Berlin Heidelberg.",evolved specification; Petri net; reachability graph; regression testing; test case generation,Concrete testing; Model checking; Petri nets; Reusability; Specifications; Testing; Graph analysis; Market information systems; Model based testing; Reachability graphs; Regression testing; Reusable test case; Test case generation; Test case reusability; Software testing,Article,Final,,Scopus,2-s2.0-84980407668,,
Wotawa F.; Schulz M.; Pill I.; Jehan S.; Leitner P.; Hummer W.; Schulte S.; Hoenisch P.; Dustdar S.,"Wotawa, Franz (6603677377); Schulz, Marco (55842880000); Pill, Ingo (55960028300); Jehan, Seema (55843205300); Leitner, Philipp (18037605900); Hummer, Waldemar (36716249700); Schulte, Stefan (24767006100); Hoenisch, Philipp (55844091400); Dustdar, Schahram (6701473617)",6603677377; 55842880000; 55960028300; 55843205300; 18037605900; 36716249700; 24767006100; 55844091400; 6701473617,Fifty shades of grey in SOA testing,2013,"Proceedings - IEEE 6th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2013",,,6571625,154,157,3.0,7,10.1109/ICSTW.2013.26,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883443132&doi=10.1109%2fICSTW.2013.26&partnerID=40&md5=7a7c154a34c5f4c9da1b4a79a927148c,"Testing is undisputedly a fundamental verification principle in the software landscape. Today's products require us to effectively handle and test huge, complex systems and in this context to tackle challenging traits like heterogeneity, distribution and controllability to name just a few. The advent of Service-Oriented Architectures with their inherent technological features like dynamics and heterogeneity exacerbated faced challenges, requiring us to evolve our technology. The traditional view of white or black box testing, for example, does not accommodate the multitude of shades of grey one should be able to exploit effectively for system-wide tests. Today, while there are a multitude of approaches for testing single services, there is still few work on methodological system tests for SOAs. In this paper we propose a corresponding workflow for tackling SOA testing and diagnosis, discuss SOA test case generation in more detail, and report preliminary research in that direction. © 2013 IEEE.",Model-Based Testing; Service Oriented Architectures; Test Case Generation,Information services; Service oriented architecture (SOA); Testing; Verification; Model based testing; System test; Technological feature; Test case generation; Software testing,Conference paper,Final,,Scopus,2-s2.0-84883443132,"Model-Based Testing, Service Oriented Architectures, Test Case Generation",4.0
Häser F.; Felderer M.; Breu R.,"Häser, Florian (56310077200); Felderer, Michael (24832720900); Breu, Ruth (55885332900)",56310077200; 24832720900; 55885332900,Test process improvement with documentation driven integration testing,2014,"Proceedings - 2014 9th International Conference on the Quality of Information and Communications Technology, QUATIC 2014",,,6984109,156,161,5.0,3,10.1109/QUATIC.2014.29,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921059614&doi=10.1109%2fQUATIC.2014.29&partnerID=40&md5=634d14b73fda52a267350bb24816c632,"Improving the maturity of the test process in an organization, especially but not limited to integration testing, involves obstacles and risks, such as the additional work overhead of the new process. In addition, integration testing descriptions are often too technical not addressing the language needs of the domain. In research cooperations with companies from the insurance and banking domain it turned out that test descriptions and reports are one of the most useful testing artifacts, while doing adhoc testing. This paper presents a bottom up testing approach, which first helps the integration tester in producing a semi-formal test description and report, up to be an enabler for automatic model-based testing in the very end. The presented approach is based on a textual domain specific language that is able to evolve over time. This is done by analyzing the test descriptions and reports automatically with machine learning techniques as well as manually by integration testers. Often recurring test steps or used components are integrated into the test language, making it specially tailored for a specific organization. For each test step implementations can be attached, preparing it for the next iteration. In this paper the methodology and architecture of our integration testing approach are presented together with the underlying language concepts.",Model-Based Integration Testing; Regression Testing; Test Process Improvement,Integration; Iterative methods; Learning systems; Model checking; Online systems; Problem oriented languages; Process engineering; Automatic modeling; Domain specific languages; Machine learning techniques; Model-based integrations; Regression testing; Research cooperation; Test process; Underlying language; Integration testing,Conference paper,Final,,Scopus,2-s2.0-84921059614,"Model-Based Integration Testing, Regression Testing, Test Process Improvement",6.0
Aichernig B.K.; Bauerstätter P.; Jöbstl E.; Kann S.; Korošec R.; Krenn W.; Mateis C.; Schlick R.; Schumi R.,"Aichernig, Bernhard K. (8696540300); Bauerstätter, Priska (57205344990); Jöbstl, Elisabeth (8886885400); Kann, Severin (57203817236); Korošec, Robert (56298240300); Krenn, Willibald (24490805700); Mateis, Cristinel (6506682605); Schlick, Rupert (15063379300); Schumi, Richard (57015618000)",8696540300; 57205344990; 8886885400; 57203817236; 56298240300; 24490805700; 6506682605; 15063379300; 57015618000,Learning and statistical model checking of system response times,2019,Software Quality Journal,27,2,,757,795,38.0,7,10.1007/s11219-018-9432-8,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85059619328&doi=10.1007%2fs11219-018-9432-8&partnerID=40&md5=01f3d52ce847a2727b157d6708a57195,"Since computers have become increasingly more powerful, users are less willing to accept slow responses of systems. Hence, performance testing is important for interactive systems. However, it is still challenging to test if a system provides acceptable performance or can satisfy certain response-time limits, especially for different usage scenarios. On the one hand, there are performance-testing techniques that require numerous costly tests of the system. On the other hand, model-based performance analysis methods have a doubtful model quality. Hence, we propose a combined method to mitigate these issues. We learn response-time distributions from test data in order to augment existing behavioral models with timing aspects. Then, we perform statistical model checking with the resulting model for a performance prediction. Finally, we test the accuracy of our prediction with hypotheses testing of the real system. Our method is implemented with a property-based testing tool with integrated statistical model checking algorithms. We demonstrate the feasibility of our techniques in an industrial case study with a web-service application.",Cost learning; FsCheck; Model-based testing; Performance testing; Property-based testing; Response time; Statistical model checking; User profiles,Response time (computer systems); Web services; Cost learning; FsCheck; Model based testing; Performance testing; Property based testing; Statistical model checking; User profile; Model checking,Article,Final,All Open Access; Hybrid Gold Open Access,Scopus,2-s2.0-85059619328,"Cost learning, FsCheck, Model-based testing, Performance testing, Property-based testing, Response time, Statistical model checking, User profiles",39.0
Lu Y.-F.; Pan M.-X.; Zhang T.; Wang L.-Z.; Li X.-D.,"Lu, Yi-Fei (57210929270); Pan, Min-Xue (35100822300); Zhang, Tian (7404374507); Wang, Lin-Zhang (56379755500); Li, Xuan-Dong (35173053900)",57210929270; 35100822300; 7404374507; 56379755500; 35173053900,Extension to Interaction Flow Modeling Language (IFML) for Android Application Modeling; [面向安卓应用建模的IFML扩展],2019,Ruan Jian Xue Bao/Journal of Software,30,10,,3148,3167,19.0,0,10.13328/j.cnki.jos.005793,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85075555071&doi=10.13328%2fj.cnki.jos.005793&partnerID=40&md5=b96f3f55d252ad47eed892b0e041f6fc,,Android application; Interaction flow modeling language; Model-based testing; Model-driven engineering,Flow control; Graphical user interfaces; Model checking; Modeling languages; Semantics; Android applications; Android apps; Design and implementations; Formal definition; Front-end design; Model based testing; Model-driven Engineering; Traditional models; Android (operating system),Article,Final,,Scopus,2-s2.0-85075555071,,
Serbout S.; Benattou M.,"Serbout, Sara (57214708818); Benattou, Mohammed (55497760100)",57214708818; 55497760100,Toward a Constraint Based Test Case Generation of Parallel BPEL Process,2018,International Conference on Multimedia Computing and Systems -Proceedings,2018-May,,8525942,,,,0,10.1109/ICMCS.2018.8525942,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85063214758&doi=10.1109%2fICMCS.2018.8525942&partnerID=40&md5=a1ba79167e0acbd02c5ae7bb080a5a58,"Business Process Execution Language (BPEL) offers the possibility to implement customized business processes in a record time. Testing is crucial to ensure the quality of BPEL process. The aim of this paper is to propose a constraint based approach to test parallel BPEL process. In our work, we propose an algorithm to transform a parallel BPEL process into a Parallel Control Flow Graph (PCFG), we augment PCFG with pre and post conditions, and we drive then a suite of feasible test cases. © 2018 IEEE.",constraint based testing; model based testing; parallel BPEL process; parallel control flow graph; test case generation,Codes (symbols); Data flow analysis; Flow graphs; Graphic methods; Model checking; Parallel flow; Bpel process; Constraint-based testing; Model based testing; Parallel control; Test case generation; Process control,Conference paper,Final,,Scopus,2-s2.0-85063214758,,
Fragal V.H.; Simao A.; Mousavi M.R.,"Fragal, Vanderson Hafemann (55930389300); Simao, Adenilso (35618293600); Mousavi, Mohammad Reza (7005703024)",55930389300; 35618293600; 7005703024,Hierarchical featured state machines,2019,Science of Computer Programming,171,,,67,88,21.0,4,10.1016/j.scico.2018.10.001,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056800984&doi=10.1016%2fj.scico.2018.10.001&partnerID=40&md5=6941f59cc04a088cbd92c15b22865878,"Variants of the Finite State Machine (FSM) model have been extensively used to describe the behavior of reactive systems. In particular, several model-based testing techniques have been developed to support test case generation from FSMs and test case execution. Most of such techniques require several validation properties to hold for the underlying test models. Featured Finite State Machine (FFSM) is an extension of the FSM model proposed in our earlier publication that represents the abstract behavior of an entire Software Product Line (SPL). By validating an FFSM, we validate all valid products configurations of the SPL looking forward configurable test suites. However, modeling a large SPL using flat FFSMs may lead to a huge and hard-to-maintain specification. In this paper, we propose an extension of the FFSM model, named Hierarchical Featured State Machine (HFSM). Inspired by Statecharts and UML state machines, we introduce the HFSM model to improve model readability by grouping up FFSM conditional states and transitions into abstracted entities. Our ultimate goal is to use HFSMs as test models. To this end, we first define some syntactic and semantical validation criteria for HFSMs as prerequisites for using them as test models. Moreover, we implement an adapted graphical Eclipse-based editor from the Yakindu Project for modeling, derivation, and checking feature-oriented properties using Satisfiability Modulo Theory (SMT) solver tools. We investigate the applicability of our approach by applying it to an HFSM for a realistic case study (the Body Comfort System). The results indicate that HFSMs can be used to compactly represent and efficiently validate the behavior of parallel components in SPLs.",Featured finite state machine; Hierarchical featured finite state machine; Model validation; Software product line,Computer software; Model checking; Model based testing; Model validation; Parallel component; Satisfiability modulo Theories; Software Product Line; Software product line (SPL); Test case generation; Validation criteria; Testing,Article,Final,All Open Access; Bronze Open Access; Green Open Access,Scopus,2-s2.0-85056800984,"Featured finite state machine, Hierarchical featured finite state machine, Model validation, Software product line",22
Ji R.; Li Z.; Chen S.; Pan M.; Zhang T.; Ali S.; Yue T.; Li X.,"Ji, Ruihua (57202449832); Li, Zhong (57202458103); Chen, Shouyu (57202457082); Pan, Minxue (35100822300); Zhang, Tian (7404374507); Ali, Shaukat (56962801700); Yue, Tao (25651096400); Li, Xuandong (35173053900)",57202449832; 57202458103; 57202457082; 35100822300; 7404374507; 56962801700; 25651096400; 35173053900,Uncovering Unknown System Behaviors in Uncertain Networks with Model and Search-Based Testing,2018,"Proceedings - 2018 IEEE 11th International Conference on Software Testing, Verification and Validation, ICST 2018",,,,204,214,10.0,5,10.1109/ICST.2018.00029,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85048452481&doi=10.1109%2fICST.2018.00029&partnerID=40&md5=35b3e64f06e832cb11696f577c50ec65,"Modern software systems rely on information networks for communication. Such information networks are inherently unpredictable and unreliable. Consequently, software systems behave in an unstipulated manner in uncertain network conditions. Discovering unknown behaviors of these software systems in uncertain network conditions is essential to ensure their correct behaviors. Such discovery requires the development of systematic and automated methods. We propose an online and iterative model-based testing approach to evolve test models with search algorithms. Our ultimate aim is to discover unknown expected behaviors that can only be observed in uncertain network conditions. Also, we have implemented an adaptive search-based test case generation strategy to generate test cases that are executed on the system under test. We evaluated our approach with an open source video conference application-Jitsi with three search algorithms in comparison with random search. Results show that our approach is efficient in discovering unknown system behaviors. In particular, (1+1) Evolutionary Algorithm outperformed the other algorithms.",Model-based Testing; Search-based Testing; Uncertain Networks; uncertainty,Evolutionary algorithms; Information services; Iterative methods; Learning algorithms; Model checking; Open source software; Automated methods; Information networks; Model based testing; Search-based testing; System under test; Test case generation; Uncertain networks; uncertainty; Software testing,Conference paper,Final,,Scopus,2-s2.0-85048452481,"Model-based Testing, Search-based Testing, Uncertain Networks, uncertainty",11
Maciel D.; Paiva A.C.R.; Da Silva A.R.,"Maciel, Daniel (57209348415); Paiva, Ana C.R. (7102683763); Da Silva, Alberto Rodrigues (8917629900)",57209348415; 7102683763; 8917629900,From requirements to automated acceptance tests of interactive apps: An integrated model-based testing approach,2019,ENASE 2019 - Proceedings of the 14th International Conference on Evaluation of Novel Approaches to Software Engineering,,,,265,272,7.0,10,10.5220/0007679202650272,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85067453824&doi=10.5220%2f0007679202650272&partnerID=40&md5=0e9b32be5176dfe918c29a132c0a28a7,"Frequently software testing tends to be neglected at the beginning of the projects, only performed on the late stage. However, it is possible to benefit from combining requirement with testing specification activities. On one hand, acceptance tests specification will require less manual effort since they are defined or generated automatically from the requirements specification. On the other hand, the requirements specification itself will end up having higher quality due to the use of a more structured language, reducing typical problems such as ambiguity, inconsistency and incorrectness. This research proposes an approach that promotes the practice of tests specification since the very beginning of projects, and its integration with the requirements specification itself. It is a model-driven approach that contributes to maintain the requirements and tests alignment, namely between requirements, test cases, and low-level automated test scripts. To show the applicability of the approach, two complementary languages are adopted: the ITLingo RSL that is particularly designed to support both requirements and tests specification; and the Robot language, which is a low-level keyword-based language for the specification of test scripts. The approach includes model-to-model transformation techniques, such as test cases into test scripts transformations. In addition, these test scripts are executed by the Robot test automation framework.",Model-based Testing (MBT); Requirements Specification Language (RSL); Test Case Execution; Test Case Generation; Test Case Specification,Automatic test pattern generation; Automation; Model checking; Software testing; Specification languages; Specifications; Model based testing; Requirements specification language; Test case; Test case generation; Test case specifications; Acceptance tests,Conference paper,Final,All Open Access; Hybrid Gold Open Access,Scopus,2-s2.0-85067453824,"Model-based Testing (MBT), Requirements Specification Language (RSL), Test Case Execution, Test Case Generation, Test Case Specification",8
Herpel H.-J.; Willich G.; Li J.; Xie J.; Johansen B.; Kvinnesland K.; Krueger S.; Barrios P.,"Herpel, H.-J. (6602507372); Willich, G. (6503905726); Li, J. (8273831100); Xie, J. (57190225513); Johansen, B. (57190223018); Kvinnesland, K. (12786475200); Krueger, S. (57191863751); Barrios, P. (57190223610)",6602507372; 6503905726; 8273831100; 57190225513; 57190223018; 12786475200; 57191863751; 57190223610,Matts - A step towards model based testing,2016,"European Space Agency, (Special Publication) ESA SP",SP-736,,,,,,0,,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994310333&partnerID=40&md5=52eb193746291ca67fdf66b818bce67d,"In this paper we describe a Model Based approach to testing of on-board software and compare it with traditional validation strategy currently applied to satellite software. The major problems that software engineering will face over at least the next two decades are increasing application complexity driven by the need for autonomy and serious application robustness. In other words, how do we actually get to declare success when trying to build applications one or two orders of magnitude more complex than today's applications. To solve the problems addressed above the software engineering process has to be improved at least for two aspects: 1) Software design and 2) Software testing. The software design process has to evolve towards model-based approaches with extensive use of code generators. Today, testing is an essential, but time and resource consuming activity in the software development process. Generating a short, but effective test suite usually requires a lot of manual work and expert knowledge. In a modelbased process, among other subtasks, test construction and test execution can also be partially automated. The basic idea behind the presented study was to start from a formal model (e.g. State Machines), generate abstract test cases which are then converted to concrete executable test cases (input and expected output pairs). The generated concrete test cases were applied to an on-board software. Results were collected and evaluated wrt. applicability, cost-efficiency, effectiveness at fault finding, and scalability.",,Application programs; Concretes; Formal methods; Model checking; Software design; Software engineering; Testing; Application complexity; Model based approach; Model based testing; Orders of magnitude; Software design process; Software development process; Software engineering process; Validation strategies; Software testing,Conference paper,Final,,Scopus,2-s2.0-84994310333,,
Dhutti A.; Tumin S.A.; Gan T.H.; Kanfoud J.; Balachandran W.,"Dhutti, A. (57193008259); Tumin, S.A. (57193009906); Gan, T.H. (7103369965); Kanfoud, J. (9733182400); Balachandran, W. (7005027807)",57193008259; 57193009906; 7103369965; 9733182400; 7005027807,Comparative study on the performance of high temperature piezoelectric materials for structural health monitoring using ultrasonic guided waves,2018,"Proceedings of the 7th Asia-Pacific Workshop on Structural Health Monitoring, APWSHM 2018",,,,598,608,10.0,3,,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85064637140&partnerID=40&md5=a4df0d4a99c8d51bffc1bb11fea56248,"Focusing on predictive maintenance for optimised maintenance schedules, energy, aerospace, oil and gas industries are seeking technologies to enable in-service structural health monitoring (SHM) of their critical assets. Many of these critical assets such as turbine engine components and steamlines operate at elevated temperatures. For such high temperature (HT) applications, advanced piezoelectric materials are required for construction of ultrasonic transducers. Ultrasonic guided wave (UGW) technology has been widely used for pipeline inspection but HT ultrasonic transducers are required to enable in-service SHM of steamlines. The main criterion for HTUGW transducer design is an appropriate, temperature-stable ultrasonic response at target temperatures and a stable frequency response (in the range10-150 kHz for pipes of 2-48 inch diameter) to maintain defect sensitivity at HT. These transducers comprise piezoelectric materials of appropriate polarisation and dimensions, which, when excited with an electrical input, transmit the desired displacement patterns to the UGW modes in the structure being monitored. The detection of defects is indicated by changes in the received ultrasonic measurements. With temperature variations and over time, the dielectric, elastic and piezoelectric properties of the active material can diverge, leading to deviations in the ultrasonic response that may lead to false alarms. This comparative study investigates and compares the performance of four commercially available HT piezoelectric materials: PZT-5A, MBT, LiNbO3 and GaPO4. The maximum recommended operating temperatures for long-term use of these selected materials are 200°C, 400°C, 600°C and 720°C, respectively. Elastic, dielectric and material properties representing a figure of merit for piezo transducers are determined at increasing temperatures up to 600°C and over a period of 1000 hours. The findings from this work will enable transducer design to use the most appropriate piezoelectric material for the target temperature range.",Em impedance; Guided waves; High temperature piezoelectric; SHM; Thermal effects,Defects; Frequency response; Gallium compounds; Guided electromagnetic wave propagation; High temperature applications; Lithium compounds; Niobium compounds; Piezoelectric materials; Piezoelectricity; Temperature; Thermal effects; Transducers; Ultrasonic applications; Ultrasonic transducers; Ultrasonic waves; High temperature; Increasing temperatures; Optimised maintenances; Piezoelectric property; Predictive maintenance; Structural health monitoring (SHM); Turbine engine components; Ultrasonic guided wave; Structural health monitoring,Conference paper,Final,,Scopus,2-s2.0-85064637140,"Em impedance, Guided waves, High temperature piezoelectric, SHM, Thermal effects",11
Silva A.G.F.; Andrade W.L.; Alves E.L.G.,"Silva, Anderson G.F. (57204467159); Andrade, Wilkerson L. (18036483300); Alves, Everton L.G. (35185930600)",57204467159; 18036483300; 35185930600,A study on the impact of model evolution in MBT suites,2018,ACM International Conference Proceeding Series,,,,49,56,7.0,3,10.1145/3266003.3266009,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85055689351&doi=10.1145%2f3266003.3266009&partnerID=40&md5=a7aeeb17e063a7a619f826d0e0dd27d8,"Software testing is known to be a key-factor for the success of a software development project. In this context, Model-Based Testing (MBT) plays an important role by providing an automated way for generating test cases from system models. However, although MBT can be helpful for creating sound test cases, its use can be very sensitive to model changes. Model edits often lead to a great number of obsolete test cases, as the software and its models evolve. This fact is even more evident in agile projects where requirement artifacts are very volatile. This paper presents an empirical study designed for investigating how model edits can impact MBT test suites. For that, we run a case study in the context of two industrial projects that apply agile methodologies combined with the use of MBT. We observed the evolution of specification models and their impact on generated MBT suites. Our results showed that 86% of the generated test cases were discarded due to model edits and their impact. However, a deeper analysis found that 52% of these tests were impacted only by syntactic model edits, which indicate they could be reused with little revision efforts.",Model-based testing; Test suite maintenance; Use case evolution,Automatic test pattern generation; Automation; Model checking; Software design; Agile Methodologies; Empirical studies; Industrial projects; Model based testing; Software development projects; Specification models; Test suites; Use-case; Software testing,Conference paper,Final,,Scopus,2-s2.0-85055689351,"Model-based testing, Test suite maintenance, Use case evolution",8
Kanstrén T.; Kekkonen T.,"Kanstrén, Teemu (18434124300); Kekkonen, Tuomas (56630661800)",18434124300; 56630661800,Distributed online test generation for model-based testing,2013,"Proceedings - Asia-Pacific Software Engineering Conference, APSEC",1,,6805414,255,262,7.0,4,10.1109/APSEC.2013.43,https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936865530&doi=10.1109%2fAPSEC.2013.43&partnerID=40&md5=e1e9e43ddaa75aae07788e97e15dd53d,"In online model-based testing, test execution is interleaved with test generation. Test cases should be generated and executed with minimal delay, while still achieving targeted coverage criteria quickly. Extensive model analysis in such case is not possible as any delays in choosing the next step will immediately impact the response times of test execution. The algorithms thus need to be as fast as possible, where a limiting factor is the available computing power. Experts working on the test models used for the generation often need to be able to quickly edit the models, generate test cases, and use the feedback to further evolve the models. Reserving large-scale computing resources while editing the model is unnecessary, but performing the analysis on them for test generation can improve the execution response time significantly. In this paper, we present an approach and algorithm for distributing the online test generation analysis part concurrently over the network, while enabling the expert to work on the models and execute the test cases locally at the same time.",Algorithm; Distributed testing; Model-based testing; Online test generation; Optimization,Algorithms; Model checking; Optimization; Social networking (online); Software engineering; Computing power; Coverage criteria; Distributed testing; Large-scale computing; Model based testing; On-line tests; Online model-based testing; Test generations; Computer aided network analysis,Conference paper,Final,,Scopus,2-s2.0-84936865530,"Algorithm, Distributed testing, Model-based testing, Online test generation, Optimization",8
Yalla M.V.V.S.; Vakili A.; Beckwith T.R.,"Yalla, Murty V.V.S. (6602583680); Vakili, Arman (57219868924); Beckwith, Thomas R. (6602646056)",6602583680; 57219868924; 6602646056,Calculation of Transient Torques on Motors during a Residual Voltage Motor Bus Transfer,2020,IEEE Transactions on Industry Applications,56,6,9165177,6104,6116,12.0,3,10.1109/TIA.2020.3015822,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85095841034&doi=10.1109%2fTIA.2020.3015822&partnerID=40&md5=59750ffe3fe54ca2721d3deb4381fcf7,"To maintain a critical process upon loss of primary motor bus power, the petrochemical industry depends largely on residual voltage transfer, ignoring phase angle and closing the backup source when the motor bus residual voltage has decayed to 30%. To assess the consequences of out-of-phase residual voltage transfers, a transient simulation program models a bus with three motors of various sizes, inertias, and impedances. The three motors are loaded around 80% with fan, pump, and compressor loads to calculate the peak transient motor current and torque upon closure of the backup source breaker. Pre-transfer events and conditions produce an initial phase angle between the primary and backup sources, and the simulation reproduces the resultant residual voltage transfer closing angle and its effect on the peak transient current and torque. Individual motors exhibit positive and negative torques, oscillating from induction generator to motor, and the peak-to-peak torques are also recorded, as they can impact the motor shaft stress.",Fast transfer; in-phase transfer; main-tie-main; motor bus transfer (MBT); residual voltage transfer,Asynchronous generators; Torque; Transients; Voltage distribution measurement; Compressor load; Negative torques; Petrochemical industry; Residual voltage; Residual voltage transfer; Transient current; Transient simulation; Transient torque; Power quality,Article,Final,All Open Access; Hybrid Gold Open Access,Scopus,2-s2.0-85095841034,"Fast transfer, in-phase transfer, main-tie-main, motor bus transfer (MBT), residual voltage transfer",13
Şahin Gebizli C.; Kırkıcı A.; Sözer H.,"Şahin Gebizli, Ceren (57202946076); Kırkıcı, Abdulhadi (57202941964); Sözer, Hasan (16040424900)",57202946076; 57202941964; 16040424900,Increasing test efficiency by risk-driven model-based testing,2018,Journal of Systems and Software,144,,,356,365,9.0,3,10.1016/j.jss.2018.06.080,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049896037&doi=10.1016%2fj.jss.2018.06.080&partnerID=40&md5=567c644a8f3bd43b31b2d7ebd637c12f,"We introduce an approach and a tool, RIMA, for adapting test models used for model-based testing to augment information regarding failure risk. We represent test models in the form of Markov chains. These models comprise a set of states and a set of state transitions that are annotated with probability values. These values steer the test case generation process, which aims at covering the most probable paths. RIMA refines these models in 3 steps. First, it updates transition probabilities based on a collected usage profile. Second, it updates the resulting models based on fault likelihood at each state, which is estimated based on static code analysis. Third, it performs updates based on error likelihood at each state, which is estimated with dynamic analysis. The approach is evaluated with two industrial case studies for testing digital TVs and smart phones. Results show that the approach increases test efficiency by revealing more faults in less testing time.",Industrial case study; Model refinement; Model-based testing; Risk-based testing; Software test automation; Statistical usage testing,Efficiency; Markov processes; Model checking; Smartphones; Testing; Industrial case study; Model based testing; Model refinement; Risk based testing; Software test automation; Statistical usage testing; Software testing,Article,Final,,Scopus,2-s2.0-85049896037,"Industrial case study, Model refinement, Model-based testing, Risk-based testing, Software test automation, Statistical usage testing",10
